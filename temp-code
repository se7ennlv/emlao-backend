/* eslint-disable prettier/prettier */
import { Injectable } from '@nestjs/common';
import { InjectModel } from '@nestjs/mongoose';
import { Model } from 'mongoose';
import { CreateAccountDto } from './dto/create-account.dto';
import { Account, AccountDocument } from './entities/account.entity';
import * as moment from 'moment';
import * as argon2 from 'argon2';

@Injectable()
export class AccountsService {
  constructor(
    @InjectModel(Account.name) private accountModel: Model<AccountDocument>
  ) { }


  async create(createDto: CreateAccountDto) {
    try {
      const now = new Date();
      const fullDate = moment(now).format('YYYY-MM-DD HH:mm:ss');

      const passwordHash = await argon2.hash(createDto.password);

      console.log(createDto);

      return createDto;
      


      // const create = {
      //   accountNo: '1234567',
      //   pin: '1234',
      //   username: createDto.username,
      //   password: passwordHash,
      //   role: createDto.role,
      //   createdAt: moment.utc(fullDate),
      //   updatedAt: moment.utc(fullDate)
      // };

      // const model = new this.accountModel(create);
      // const result = await model.save();

      // console.log(result);


    } catch (error) {

    }
  }

}
