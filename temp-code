  async update(id: string, updateDto: UpdateCategoryDto) {
    try {
      if (!isValidObjectId(id)) {
        throw new BadRequestException(errorMessages[400]);
      } else {
        const now = new Date();
        const fullDate = moment(now).format(dateFormat.format1);
        const update = { ...updateDto, updatedAt: moment.utc(fullDate) };
        const filter = { _id: id };
        const resutl = await this.categoryModel.updateOne(filter, update).exec();

        if (resutl.modifiedCount) {
          const category = await this.findOne(id);

          if (category) {
            return category;
          }

          throw new NotFoundException(errorMessages[400]);
        }
      }
    } catch (error) {
      throw new InternalServerErrorException(errorMessages[500]);
    }
  }
